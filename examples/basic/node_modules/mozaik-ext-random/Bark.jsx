import React, { Component } from 'react';
import PropTypes from 'prop-types';
import fetch from 'isomorphic-unfetch'
import { Widget, WidgetHeader, WidgetBody } from '@mozaik/ui';

class Bark extends Component {
  constructor(props) {
    super(props);
    this.intervalHandle
    this.state = {
      dogurl: '',
      title: 'Random Dog Bark'
    }
  }

  componentDidMount () {
    const refreshInterval = parseInt(15000)
    // Set new update interval while removing existing
    if (this.intervalHandle) {
      clearInterval(this.intervalHandle)
    }

    this.intervalHandle = setInterval(() => {
      this.fetchInformation().then(result => this.setState({
        dogurl: result
      }))
    }, refreshInterval)

  }

  componentWillUnmount () {
    if (this.intervalHandle) {
      clearInterval(this.intervalHandle)
    }
  }

  async fetchInformation () {

    try {
      const res = await fetch(`https://dog.ceo/api/breeds/image/random`)
      const json = await res.json()
      return json.message
    } catch(err) { console.log(err)}
  }

  render () {
    const {title, dogurl} = this.state
    return React.createElement(
        Widget,
        null,
        React.createElement(WidgetHeader, { title: title}),
        React.createElement(
            WidgetBody,
            null,
            React.createElement(
                'img',
                { src: dogurl }
            )
        )
    );
  }
}

Bark.displayName = 'Bark';

Bark.propTypes = {
    title:    PropTypes.string,
    interval: PropTypes.number,
};

export default Bark;
